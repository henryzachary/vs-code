import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;

public class MetricConverterGUI extends Application {

    @Override
    public void start(Stage primaryStage) {
        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(10));
        gridPane.setHgap(10);
        gridPane.setVgap(10);

        Label titleLabel = new Label("Metric Converter");
        titleLabel.setStyle("-fx-font-size: 18px; -fx-font-weight: bold;");
        GridPane.setColumnSpan(titleLabel, 2);
        gridPane.add(titleLabel, 0, 0);

        Label choiceLabel = new Label("Select conversion:");
        gridPane.add(choiceLabel, 0, 1);

        ComboBox<String> choiceComboBox = new ComboBox<>();
        choiceComboBox.getItems().addAll("Kilometers to Miles", "Centimeters to Inches", "Kilograms to Pounds", "Millimeters to Inches");
        choiceComboBox.setValue("Kilometers to Miles");
        gridPane.add(choiceComboBox, 1, 1);

        Label inputLabel = new Label("Enter value:");
        gridPane.add(inputLabel, 0, 2);

        TextField inputField = new TextField();
        gridPane.add(inputField, 1, 2);

        Button convertButton = new Button("Convert");
        gridPane.add(convertButton, 1, 3);

        Label resultLabel = new Label();
        gridPane.add(resultLabel, 0, 4);
        GridPane.setColumnSpan(resultLabel, 2);

        convertButton.setOnAction(event -> {
            String choice = choiceComboBox.getValue();
            String inputValue = inputField.getText();
            try {
                double value = Double.parseDouble(inputValue);
                String result = "";
                switch (choice) {
                    case "Kilometers to Miles":
                        result = value + " km is equal to " + (value * 0.62137119) + " miles.";
                        break;
                    case "Centimeters to Inches":
                        result = value + " cm is equal to " + (value * 0.39370) + " inches.";
                        break;
                    case "Kilograms to Pounds":
                        result = value + " kg is equal to " + (value * 2.20462) + " lbs.";
                        break;
                    case "Millimeters to Inches":
                        result = value + " mm is equal to " + (value * 0.03937008) + " inches.";
                        break;
                }
                resultLabel.setText(result);
            } catch (NumberFormatException e) {
                resultLabel.setText("Invalid input. Please enter a valid number.");
            }
        });

        Scene scene = new Scene(gridPane, 400, 200);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Metric Converter");
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
